name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        SMS_API_USERNAME: ${{ secrets.SMS_API_USERNAME }}
        SMS_API_KEY: ${{ secrets.SMS_API_KEY }}
        SENDER_SHORTCODE: ${{ secrets.SENDER_SHORTCODE }}
        POSTGRES_DB: ${{ secrets.POSTGRES_NAME }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
        POSTGRES_PORT: 5432
    
    services:
        postgres:
            image: postgres
            env:
                POSTGRES_DB: ${{ env.POSTGRES_DB }}
                POSTGRES_USER: ${{ env.POSTGRES_USER }}
                POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
                POSTGRES_HOST: ${{ env.POSTGRES_HOST }}
                POSTGRES_PORT: 5432
            ports:
                - 5432:5432
            options: >-
                --health-cmd pg_isready
                --health-interval 10s
                --health-timeout 5s
                --health-retries 5

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run Tests
      run: |
        coverage run -m pytest --ds=savinfo.settings
        coverage report -m
